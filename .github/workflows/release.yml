name: Release

on:
  push:
    tags:
      - 'v*.*.*'

env:
  PYTHON_VERSION: '3.11'

jobs:
  test-before-release:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run full test suite
      run: |
        python -m pytest tests/ --cov=src --cov-report=term-missing --cov-fail-under=80
      env:
        PYTHONPATH: src

    - name: Run linting
      run: |
        flake8 src/ tests/ --count --statistics
        black --check src/ tests/
        mypy src/ --ignore-missing-imports

  build-and-publish:
    needs: test-before-release
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build wheel twine setuptools

    - name: Extract version from tag
      run: |
        VERSION=${GITHUB_REF#refs/tags/v}
        echo "VERSION=$VERSION" >> $GITHUB_ENV

    - name: Create setup.py for release
      run: |
        cat > setup.py << EOF
        from setuptools import setup, find_packages

        with open("README.md", "r", encoding="utf-8") as fh:
            long_description = fh.read()

        with open("requirements.txt", "r", encoding="utf-8") as fh:
            requirements = [line.strip() for line in fh if line.strip() and not line.startswith("#")]

        setup(
            name="voyager-trader",
            version="$VERSION",
            author="VOYAGER-Trader Team",
            description="An autonomous, self-improving trading system inspired by the VOYAGER project",
            long_description=long_description,
            long_description_content_type="text/markdown",
            packages=find_packages(where="src"),
            package_dir={"": "src"},
            classifiers=[
                "Development Status :: 3 - Alpha",
                "Intended Audience :: Financial and Insurance Industry",
                "License :: OSI Approved :: MIT License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3.10",
                "Programming Language :: Python :: 3.11",
                "Programming Language :: Python :: 3.12",
                "Topic :: Office/Business :: Financial :: Investment",
                "Topic :: Scientific/Engineering :: Artificial Intelligence",
            ],
            python_requires=">=3.10",
            install_requires=requirements,
            entry_points={
                "console_scripts": [
                    "voyager-trader=voyager_trader.cli:main",
                ],
            },
        )
        EOF

    - name: Build package
      run: |
        python -m build

    - name: Check package
      run: |
        twine check dist/*

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        files: dist/*
        generate_release_notes: true
        draft: false
        prerelease: ${{ contains(github.ref, 'alpha') || contains(github.ref, 'beta') || contains(github.ref, 'rc') }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  docker-build:
    needs: test-before-release
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Extract version from tag
      run: |
        VERSION=${GITHUB_REF#refs/tags/v}
        echo "VERSION=$VERSION" >> $GITHUB_ENV

    - name: Create Dockerfile
      run: |
        cat > Dockerfile << 'EOF'
        FROM python:3.11-slim

        WORKDIR /app

        # Install system dependencies
        RUN apt-get update && apt-get install -y \
            gcc \
            g++ \
            && rm -rf /var/lib/apt/lists/*

        # Copy requirements and install Python dependencies
        COPY requirements.txt .
        RUN pip install --no-cache-dir -r requirements.txt

        # Copy source code
        COPY src/ ./src/
        COPY . .

        # Install the package
        RUN pip install -e .

        # Create non-root user
        RUN useradd --create-home --shell /bin/bash trader
        USER trader

        EXPOSE 8000

        CMD ["python", "-m", "voyager_trader"]
        EOF

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: false
        tags: |
          voyager-trader:latest
          voyager-trader:${{ env.VERSION }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

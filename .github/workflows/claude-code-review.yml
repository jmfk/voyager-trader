name: Claude Code Review with TODO Tracking

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  claude-review:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write  # Need write access for comments and labels
      issues: write        # Need write access for labels
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Check Review State
        id: check-review-state
        uses: actions/github-script@v7
        with:
          script: |
            const { data: labels } = await github.rest.issues.listLabelsOnIssue({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number
            });

            const hasInitialReview = labels.some(label => label.name === 'claude-reviewed');
            const isFirstReview = context.payload.action === 'opened' || !hasInitialReview;

            console.log(`Is first review: ${isFirstReview}`);
            console.log(`Event action: ${context.payload.action}`);
            console.log(`Has claude-reviewed label: ${hasInitialReview}`);

            return { isFirstReview };

      - name: Run Claude Initial Review
        if: fromJSON(steps.check-review-state.outputs.result).isFirstReview
        id: claude-initial-review
        uses: anthropics/claude-code-action@beta
        with:
          claude_code_oauth_token: ${{ secrets.CLAUDE_CODE_OAUTH_TOKEN }}
          use_sticky_comment: true

          direct_prompt: |
            Please perform a comprehensive INITIAL REVIEW of this pull request.

            Structure your review as follows:

            ## üìã Code Review Summary
            Brief overview of the PR quality and main findings.

            ## üîç Detailed Analysis
            Provide feedback on:
            - Code quality and best practices
            - Potential bugs or edge cases
            - Performance considerations
            - Security concerns
            - Test coverage
            - Documentation

            ## ‚úÖ TODO List
            Create a clear TODO list for issues that need to be fixed.
            Format each item as:
            - [ ] TODO: [specific issue] - [file:line if applicable]

            Examples:
            - [ ] TODO: Add input validation for email field - src/auth.js:45
            - [ ] TODO: Handle null case in getUserData function - src/user.js:120
            - [ ] TODO: Add unit tests for calculateDiscount - src/pricing.js

            ## üí° Suggestions (Optional)
            Non-critical improvements that would enhance the code but aren't required.

            Mark items with priority if helpful:
            üî¥ Critical (must fix)
            üü° Important (should fix)
            üü¢ Nice to have (optional)

      - name: Add Review Label
        if: fromJSON(steps.check-review-state.outputs.result).isFirstReview
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.issues.addLabels({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              labels: ['claude-reviewed', 'has-todos']
            });

      - name: Run Claude TODO Check
        if: '!fromJSON(steps.check-review-state.outputs.result).isFirstReview'
        id: claude-todo-check
        uses: anthropics/claude-code-action@beta
        with:
          claude_code_oauth_token: ${{ secrets.CLAUDE_CODE_OAUTH_TOKEN }}
          use_sticky_comment: true

          direct_prompt: |
            This is a FOLLOW-UP review. Check the TODO items from the initial review.

            Instructions:
            1. Find your previous review comment in this PR
            2. Check each TODO item against the new changes
            3. DO NOT perform a new full review

            Format your response as:

            ## üìä TODO Status Update

            ### ‚úÖ Completed
            List TODOs that have been successfully addressed:
            - [x] ~~TODO: [what was fixed]~~

            ### ‚è≥ Still Pending
            List TODOs that still need work:
            - [ ] TODO: [what still needs fixing]

            ### üÜï New Issues (if any)
            Only mention if the fixes introduced critical new problems:
            - [ ] TODO: [new critical issue]

            ### üìà Summary
            - Completed: X/Y TODOs
            - Status: [Ready for merge / Needs more work]

            If all TODOs are complete: "‚úÖ All TODO items have been addressed. This PR is ready for final review."
            If work remains: "‚ö†Ô∏è There are still X pending TODO items that need to be addressed."

      - name: Update Labels Based on TODO Status
        if: '!fromJSON(steps.check-review-state.outputs.result).isFirstReview'
        uses: actions/github-script@v7
        with:
          script: |
            // This is a simplified example - you might want to parse Claude's response
            // to determine if all TODOs are complete

            // For now, just ensure the PR stays labeled as reviewed
            const { data: labels } = await github.rest.issues.listLabelsOnIssue({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number
            });

            // You could add logic here to:
            - Remove 'has-todos' label if all complete
            - Add 'ready-for-merge' label if approved
            - Update other status labels as needed

repos:
  # General code quality hooks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      - id: trailing-whitespace
        args: [--markdown-linebreak-ext=md]
      - id: end-of-file-fixer
      - id: check-yaml
      - id: check-added-large-files
        args: ['--maxkb=500']
      - id: check-case-conflict
      - id: check-merge-conflict
      - id: check-json
      - id: check-ast
      - id: debug-statements

  # Python import sorting
  - repo: https://github.com/pycqa/isort
    rev: 5.13.2
    hooks:
      - id: isort
        args: ["--profile", "black", "--filter-files"]

  # Python code formatting
  - repo: https://github.com/psf/black
    rev: 23.12.1
    hooks:
      - id: black
        language_version: python3
        args: [--line-length=88]

  # Python linting
  - repo: https://github.com/pycqa/flake8
    rev: 7.0.0
    hooks:
      - id: flake8
        args: [
          "--max-line-length=88",
          "--extend-ignore=E203,W503",
          "--max-complexity=10"
        ]

  # Conventional commit message validation
  - repo: https://github.com/compilerla/conventional-pre-commit
    rev: v3.0.0
    hooks:
      - id: conventional-pre-commit
        stages: [commit-msg]
        args: [
          feat, fix, docs, style, refactor, perf, test, chore, ci, build
        ]

  # Architecture Decision Record validation
  - repo: local
    hooks:
      - id: adr-format-check
        name: ADR Format Validation
        entry: bash
        language: system
        files: ^docs/adr/.*\.md$
        args:
          - -c
          - |
            for file in "$@"; do
              echo "Validating ADR format: $file"
              if [ -f "$file" ]; then
                # Check required sections exist
                if ! grep -q "^# Status" "$file"; then
                  echo "ERROR: Missing '# Status' section in $file"
                  exit 1
                fi
                if ! grep -q "^# Context" "$file"; then
                  echo "ERROR: Missing '# Context' section in $file"
                  exit 1
                fi
                if ! grep -q "^# Decision" "$file"; then
                  echo "ERROR: Missing '# Decision' section in $file"
                  exit 1
                fi
                if ! grep -q "^# Consequences" "$file"; then
                  echo "ERROR: Missing '# Consequences' section in $file"
                  exit 1
                fi
                echo "âœ… ADR format valid: $file"
              fi
            done

# Global configuration
default_install_hook_types: [pre-commit, commit-msg]
default_stages: [pre-commit]

ci:
  autofix_commit_msg: |
    [pre-commit.ci] auto fixes from pre-commit hooks

    for more information, see https://pre-commit.ci
  autofix_prs: true
  autoupdate_branch: ''
  autoupdate_commit_msg: '[pre-commit.ci] pre-commit autoupdate'
  autoupdate_schedule: weekly
  submodules: false
